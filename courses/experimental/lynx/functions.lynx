window = new group
    name:"gro"
    childElements: new set
        subset1: new text
            name:"text"
            x:text.pos.x
            y:text.pos.y
            r:0
            g:0
            b:0
            pos:new coordinatePosition
                x:20
                y:20
            width:100
            height:15
            op1:new object
                name:"apply"
                equalTo:apply.function.result
                op1:"a"
                list:new object
                    value:"b"
                    nextElement:new object
                        name:"b"
                function:new dbSearch
                    jsPrimitive:{dbSearch}
                    query:"contains"
            innerText:text.op1.equalTo

dbSearch = new object

contains = new funct
    name:"contains"
    list:contains.caller.list
    op1:contains.caller.op1
    result:new ternary
        name:"tern"
        condition:contains.list.value == contains.op1
        then:true
        alt:new get
            attribute:equalTo
            jsPrimitive:{get}
            rootObject: new object
                name:"apl"
                function:new dbSearch
                    query:"contains"
                    jsPrimitive:{dbSearch}
                list:contains.list.nextElement
                op1:contains.op1
                equalTo:apl.function.result


sq = new func
    name:"sq"
    op1:sq.parentObject.op1
    numericalEquiv:sq.op1+sq.op1

list = new attribute
funct = new object
equalTo = new attribute
appl = new object


fac = new func
    name:"fac"
    op1:fac.caller.op1
    result:new ternary
        condition:fac.op1<1
        then:1
        alt:new apply
            function:multiplication
            op1:fac.op1
            op2:new apply
                function:new search
                    query:"fac"
                    jsPrimitive:{recurse}
                op1:fac.op1-1
sum = new func
    name:"sum"
    op1:sum.caller.op1
    result:1